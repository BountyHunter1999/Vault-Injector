name: Test

on:
  workflow_run:
    workflows: ["Linting"]
    types: [completed]
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install the latest version of ruff
        uses: astral-sh/ruff-action@v3
      #   with:
      #       # define this to override the default behaviour of check
      #       version: "latest"

      - name: Ruff check
        run: ruff check --fix

      - name: Ruff format
        run: ruff format

  test:
    runs-on: ubuntu-latest
    container: python:3.12-slim
    needs: lint

    services:
      postgres:
        image: postgres:18-alpine3.22
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db

    steps:
      - uses: actions/checkout@v4

      # - name: Setup Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      - name: Start Vault Service
        run: |
          mkdir -p ./vault/{config,data}

          touch tests/.env
          docker compose up -d vault --no-deps
          sleep 5

      - name: Install UV
        uses: astral-sh/setup-uv@v6
        with:
          python-version-file: ".python-version"

      - name: See running containers
        run: |
          docker ps
          docker compose logs vault
      - name: Init Vault
        run: |
          mkdir -p secrets/vault
          make get-unseal-keys

      - name: Create .env file
        run: |
          #   export VAULT_TOKEN=$(cat secrets/vault/vault-unseal-keys.txt | grep "Initial Root Token" | awk '{print $4}')
          echo "VAULT_TOKEN=$(cat secrets/vault/vault-unseal-keys.txt | grep "Initial Root Token" | cut -d ":" -f2 | tr -d ' ')" > tests/.env
          echo "VAULT_UNSEAL_KEYS=$(grep "Unseal Key" secrets/vault/vault-unseal-keys.txt| awk '{print $4}' | paste -sd "," -)" >> tests/.env

      - name: Install dependencies
        run: |
          uv sync

      - name: Run tests
        run: |
          cd tests && uv run pytest
        env:
          VAULT_ADDR: http://localhost:8200
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          POSTGRES_DB: test_db
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
